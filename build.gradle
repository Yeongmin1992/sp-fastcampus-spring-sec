/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

buildscript{
    ext {
        spring = "2.4.1"
        // spring boot의 group id를 자주 쓰기 때문에 변수로 지정
        boot = "org.springframework.boot"
        lombok = "org.projectlombok:lombok"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        // spring boot를 gradle로 build할 때 사용하는 라이브러리
        classpath("$boot:spring-boot-gradle-plugin:$spring")
    }
}

// 모든 프로젝트에 공통 적용
allprojects {
    group = "com.sp.fc"
    version = "1.0.0"
}

// 각각의 하위 프로젝트에 공통 적용
subprojects {
    // source, resource 폴더 설정
    apply plugin: "java"
    apply plugin: boot
    apply plugin: "io.spring.dependency-management"
    apply plugin: "idea"

    repositories {
        mavenCentral()
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    dependencies {
        //developmentOnly("$boot:spring-boot-devtools")
        implementation "$boot:spring-boot-starter-security"
        // json 다루기
        implementation 'com.fasterxml.jackson.core:jackson-annotations'

        compileOnly lombok
        testCompileOnly lombok
        annotationProcessor lombok
        testAnnotationProcessor lombok

        testImplementation "$boot:spring-boot-starter-test"
    }

    test {
        useJUnitPlatform()
    }

}

["comp", "web"].each {
    def subProjectDir = new File(projectDir, it)
    subProjectDir.eachDir {dir->
        def projectName = ":${it}-${dir.name}"
        project(projectName){
            // boot application을 만들지 않을 것이라 false로 설정
            bootJar.enabled(false)
            jar.enabled(true)
        }
    }
}
["server"].each {
    def subProjectDir = new File(projectDir, it)
    subProjectDir.eachDir {dir->
        def projectName = ":${it}-${dir.name}"
        project(projectName){

        }
    }
}